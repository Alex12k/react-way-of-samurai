Рабочая копия подключенная к своему git репозиторию,
именно в ней ведется разработка



Урок 41:

action - 	это объект у которого как минимум есть свойство Type

reduceer - 	это чистая функция которая принимает часть State и action, 
				и возвращает новый State либо же возвращает State который был до этого не измененный


Урок 43:

Задача контейнерной компоненты удовлетворить нужды презентационной ради которой она создавалась


Урок 44: Контекст API


Урок 49: С чего начинать разработку с UI (с компоненты) или с Reducer (со State)
			Ответ:	-  В иделе надо сначало прорабатывать State, а потом уже накручивать UI

			1. Создадим  Reducer
			(Reducer это - Чистая функция которая принимает старый State и Action, 
			если нужно этот страрый State модифицирукт
			по правилам имутабельности, то есть работая с копией, и возвращает измененную копию, либо старый State если его менять не нужно было)

			2. ActionCreater - это чистая функция кототрая возвращает Action

			----
			Затем делаем контейнерную компоненту, которая будет снобжать репрезентационную компоненту данными и колбеками

			- mapStatetoProps	-		Функция которая принимает весь глобальный State всего приложения 
											и возвращает объект только с теми данными которые нам реально из State нужны
			
			-- mapDispatchToProps - Функция служит для того, чтобы передавать дочерней 
											репрезентационной компоненте, через props колбеки, которые репрезентационная компонента сможет вызывать